{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\volov\\\\Desktop\\\\lk\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [isRegisterForm, setIsRegisterForm] = useState(false); // Флаг для переключения между формами\n  const [phone_number, setPhoneNumber] = useState(''); // Поле для номера телефона\n  const [email, setEmail] = useState(''); // Поле для электронной почты\n  const [password, setPassword] = useState(''); // Поле для пароля\n  const {\n    login,\n    register\n  } = useUser(); // Предполагаем наличие функции register в контексте UserContext\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState(null);\n  {/*}\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if (!isRegisterForm) {\r\n        // Обработка формы авторизации\r\n        const userData = { name: 'Иван Иванов', email };\r\n        login(userData);\r\n        navigate('/profile');\r\n      } else {\r\n        // Обработка формы регистрации\r\n        const userData = { phoneNumber, email, password };\r\n        register(userData);\r\n        navigate('/login'); // Переход обратно к форме авторизации после успешной регистрации\r\n      }\r\n    };\r\n   */}\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Отправка данных на сервер через fetch API\n      const response = await fetch('https://registration-fastapi.onrender.com/registration', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          phoneNumber,\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Ошибка сети: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        alert('Вы успешно зарегистрированы!');\n        if (!isRegisterForm) {\n          // Обработка формы авторизации\n          const userData = {\n            name: 'Иван Иванов',\n            email\n          };\n          login(userData);\n          navigate('/profile');\n        } else {\n          // Обработка формы регистрации\n          const userData = {\n            phoneNumber,\n            email,\n            password\n          };\n          register(userData);\n          navigate('/login'); // Переход обратно к форме авторизации после успешной регистрации\n        }\n      } else {\n        throw new Error(data.error || 'Неизвестная ошибка');\n      }\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex justify-center items-center bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-center mb-6\",\n        children: isRegisterForm ? 'Регистрация' : 'Авторизация'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [!isRegisterForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"block text-sm font-semibold mb-2\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              type: \"email\",\n              className: \"w-full p-3 border border-gray-300 rounded-md\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"block text-sm font-semibold mb-2\",\n              children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              type: \"password\",\n              className: \"w-full p-3 border border-gray-300 rounded-md\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isRegisterForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"phoneNumber\",\n              className: \"block text-sm font-semibold mb-2\",\n              children: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"phoneNumber\",\n              type: \"tel\",\n              className: \"w-full p-3 border border-gray-300 rounded-md\",\n              value: phoneNumber,\n              onChange: e => setPhoneNumber(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"block text-sm font-semibold mb-2\",\n              children: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              type: \"email\",\n              className: \"w-full p-3 border border-gray-300 rounded-md\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"block text-sm font-semibold mb-2\",\n              children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              type: \"password\",\n              className: \"w-full p-3 border border-gray-300 rounded-md\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 transition\",\n          children: isRegisterForm ? 'Зарегистрироваться' : 'Войти'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-center\",\n          children: [isRegisterForm ? 'Уже есть аккаунт?' : 'Нет аккаунта?', ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"link\",\n            tabIndex: 0,\n            onClick: () => setIsRegisterForm(!isRegisterForm),\n            className: \"cursor-pointer underline text-blue-600\",\n            children: isRegisterForm ? 'Войдите' : 'Зарегистрируйтесь'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"+e9l6IbCmw0LtYu08bl479CTfs8=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useUser","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","isRegisterForm","setIsRegisterForm","phone_number","setPhoneNumber","email","setEmail","password","setPassword","login","register","navigate","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","phoneNumber","ok","Error","status","data","json","success","alert","userData","name","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","e","target","required","role","tabIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/volov/Desktop/lk/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUser } from '../context/UserContext';\r\n\r\nconst Login = () => {\r\n  const [isRegisterForm, setIsRegisterForm] = useState(false); // Флаг для переключения между формами\r\n  const [phone_number, setPhoneNumber] = useState(''); // Поле для номера телефона\r\n  const [email, setEmail] = useState(''); // Поле для электронной почты\r\n  const [password, setPassword] = useState(''); // Поле для пароля\r\n  const { login, register } = useUser(); // Предполагаем наличие функции register в контексте UserContext\r\n  const navigate = useNavigate();\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n{/*}\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!isRegisterForm) {\r\n      // Обработка формы авторизации\r\n      const userData = { name: 'Иван Иванов', email };\r\n      login(userData);\r\n      navigate('/profile');\r\n    } else {\r\n      // Обработка формы регистрации\r\n      const userData = { phoneNumber, email, password };\r\n      register(userData);\r\n      navigate('/login'); // Переход обратно к форме авторизации после успешной регистрации\r\n    }\r\n  };\r\n*/}\r\n    const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      \r\n      try {\r\n        // Отправка данных на сервер через fetch API\r\n        const response = await fetch('https://registration-fastapi.onrender.com/registration', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ phoneNumber, email, password })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Ошибка сети: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n          alert('Вы успешно зарегистрированы!');\r\n          \r\n          if (!isRegisterForm) {\r\n            // Обработка формы авторизации\r\n            const userData = { name: 'Иван Иванов', email };\r\n            login(userData);\r\n            navigate('/profile');\r\n          } else {\r\n            // Обработка формы регистрации\r\n            const userData = { phoneNumber, email, password };\r\n            register(userData);\r\n            navigate('/login'); // Переход обратно к форме авторизации после успешной регистрации\r\n          }\r\n        } else {\r\n          throw new Error(data.error || 'Неизвестная ошибка');\r\n        }\r\n      } catch (error) {\r\n        setErrorMessage(error.message);\r\n      }\r\n    };\r\n\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex justify-center items-center bg-gray-100\">\r\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\r\n        <h2 className=\"text-2xl font-bold text-center mb-6\">{isRegisterForm ? 'Регистрация' : 'Авторизация'}</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          {!isRegisterForm && (\r\n            <>\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"email\" className=\"block text-sm font-semibold mb-2\">Email</label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className=\"w-full p-3 border border-gray-300 rounded-md\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-6\">\r\n                <label htmlFor=\"password\" className=\"block text-sm font-semibold mb-2\">Пароль</label>\r\n                <input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className=\"w-full p-3 border border-gray-300 rounded-md\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n          {isRegisterForm && (\r\n            <>\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"phoneNumber\" className=\"block text-sm font-semibold mb-2\">Номер телефона</label>\r\n                <input\r\n                  id=\"phoneNumber\"\r\n                  type=\"tel\"\r\n                  className=\"w-full p-3 border border-gray-300 rounded-md\"\r\n                  value={phoneNumber}\r\n                  onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"email\" className=\"block text-sm font-semibold mb-2\">Электронная почта</label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className=\"w-full p-3 border border-gray-300 rounded-md\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"mb-6\">\r\n                <label htmlFor=\"password\" className=\"block text-sm font-semibold mb-2\">Пароль</label>\r\n                <input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className=\"w-full p-3 border border-gray-300 rounded-md\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full py-3 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 transition\"\r\n          >\r\n            {isRegisterForm ? 'Зарегистрироваться' : 'Войти'}\r\n          </button>\r\n          <p className=\"mt-4 text-center\">\r\n            {isRegisterForm ? 'Уже есть аккаунт?' : 'Нет аккаунта?'}{' '}\r\n            <span\r\n              role=\"link\"\r\n              tabIndex={0}\r\n              onClick={() => setIsRegisterForm(!isRegisterForm)}\r\n              className=\"cursor-pointer underline text-blue-600\"\r\n            >\r\n              {isRegisterForm ? 'Войдите' : 'Зарегистрируйтесь'}\r\n            </span>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}